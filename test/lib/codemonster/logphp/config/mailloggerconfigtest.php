<?php

namespace codemonster\logphp\config;

use codemonster\logphp\Priority;

/**
 * Test class for MailLoggerConfig.
 * Generated by PHPUnit on 2011-12-14 at 23:28:35.
 */
class MailLoggerConfigTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var MailLoggerConfig
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new MailLoggerConfig('test@test.com', 'John Doe',
                        'Sample title');
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        
    }

    public function testAddEmail()
    {
        $email = 'myemail@test.com';
        $this->object->addEmail($email);
        self::assertArrayHasKey($email, $this->object->getEmails());

        $email = 'chuck.norris@test.com';
        $name = 'Chuck Norris';
        $this->object->addEmail($email, $name);
        $emails = $this->object->getEmails();
        self::assertArrayHasKey($email, $emails);
        self::assertEquals($name, $emails[$email]);

        $this->setDefaultExpectedException();
        $this->object->addEmail('invalidemail');
    }

    public function testGetEmails()
    {
        $email = 'chuck.norris@test.com';
        $this->object->addEmail($email);
        $emails = $this->object->getEmails();
        self::assertNotEmpty($emails);
        self::assertArrayHasKey($email, $emails);
    }

    public function testSetNotificationLevel()
    {
        for ($p = Priority::EMERG; $p <= Priority::DEBUG; ++$p)
        {
            $this->object->setNotificationLevel($p);
            self::assertEquals($p, $this->object->getNotificationLevel());
        }

        $this->setDefaultExpectedException();
        $this->object->setNotificationLevel(8);
    }

    public function testGetNotificationLevel()
    {
        for ($p = Priority::EMERG; $p <= Priority::DEBUG; ++$p)
        {
            $this->object->setNotificationLevel($p);
            self::assertEquals($p, $this->object->getNotificationLevel());
        }
    }

    public function testSetTitle()
    {
        $title = 'Different sample title';
        $this->object->setTitle($title);
        self::assertEquals($title, $this->object->getTitle());
        
        $this->setDefaultExpectedException();
        $this->object->setTitle('');
    }

    public function testGetTitle()
    {
        $title = 'Some other sample title of notification message';
        $this->object->setTitle($title);
        self::assertEquals($title, $this->object->getTitle());    
    }

    protected function setDefaultExpectedException()
    {
        $this->setExpectedException(
                '\\codemonster\\logphp\\config\\LoggerConfigException');        
    }
    
}
